// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoviesGallery.Context;

namespace MoviesGallery.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CategoryMovie", b =>
                {
                    b.Property<Guid>("CategoriesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MoviesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoriesId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("CategoryMovie");
                });

            modelBuilder.Entity("FilmStarMovie", b =>
                {
                    b.Property<Guid>("FilmStarsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MoviesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FilmStarsId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("FilmStarMovie");
                });

            modelBuilder.Entity("LanguageMovie", b =>
                {
                    b.Property<Guid>("LanguagesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MoviesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LanguagesId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("LanguageMovie");
                });

            modelBuilder.Entity("MoviesGallery.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0ecfbcfd-7d58-4372-8345-c3b16407e3e4"),
                            IsActive = true,
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = new Guid("e3dea670-ae23-49ed-959e-e80ea6099bc5"),
                            IsActive = true,
                            Name = "Category 2"
                        },
                        new
                        {
                            Id = new Guid("e369bca6-3939-418f-bb32-5e66327bdc4c"),
                            IsActive = true,
                            Name = "Category 3"
                        },
                        new
                        {
                            Id = new Guid("7b154460-1527-4d5c-8643-4411d0b6016e"),
                            IsActive = true,
                            Name = "Category 4"
                        },
                        new
                        {
                            Id = new Guid("501a8bfe-6bfd-4ee6-9625-737394980145"),
                            IsActive = true,
                            Name = "Category 5"
                        },
                        new
                        {
                            Id = new Guid("a29f4348-7744-4c7f-a838-cb6a2f6ff2ba"),
                            IsActive = true,
                            Name = "Category 6"
                        },
                        new
                        {
                            Id = new Guid("d1a443f0-b528-4295-8cea-96fe0c6e29fb"),
                            IsActive = true,
                            Name = "Category 7"
                        },
                        new
                        {
                            Id = new Guid("61ead6da-bc51-4e6c-86d2-09041e86c5de"),
                            IsActive = true,
                            Name = "Category 8"
                        },
                        new
                        {
                            Id = new Guid("6adf8036-0581-4658-8acf-8239ca5eedcf"),
                            IsActive = true,
                            Name = "Category 9"
                        },
                        new
                        {
                            Id = new Guid("d662a23e-72c8-4b3e-8d5e-65cf3a79e043"),
                            IsActive = true,
                            Name = "Category 10"
                        });
                });

            modelBuilder.Entity("MoviesGallery.Models.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("117bfe16-c1fc-4799-ac61-c07ef3af72d6"),
                            IsActive = true,
                            Name = "Canada"
                        },
                        new
                        {
                            Id = new Guid("69092c55-4faa-4632-a7d5-0a250394b671"),
                            IsActive = true,
                            Name = "Brazil"
                        },
                        new
                        {
                            Id = new Guid("e63f3edf-a95f-457e-92f1-759efaeb2f9d"),
                            IsActive = true,
                            Name = "Argentina"
                        },
                        new
                        {
                            Id = new Guid("ca738e7d-001d-4a43-ac93-d2fba60508b2"),
                            IsActive = true,
                            Name = "Russia"
                        },
                        new
                        {
                            Id = new Guid("fdb5df10-ec01-4593-86a5-cb231f4df924"),
                            IsActive = true,
                            Name = "Italy"
                        },
                        new
                        {
                            Id = new Guid("d41067b6-4ed0-4e2a-b70e-fdf5696900a3"),
                            IsActive = true,
                            Name = "Spain"
                        },
                        new
                        {
                            Id = new Guid("c4f91b32-10af-4600-bc95-7e54ab78171d"),
                            IsActive = true,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = new Guid("1f7659d2-8cc5-4edd-89bd-86f4c44c7298"),
                            IsActive = true,
                            Name = "South Korea"
                        },
                        new
                        {
                            Id = new Guid("f95141a6-4a75-4450-9449-b00189d331cc"),
                            IsActive = true,
                            Name = "France"
                        },
                        new
                        {
                            Id = new Guid("a30f7213-6b2d-42a9-a4eb-0e8c4af58828"),
                            IsActive = true,
                            Name = "UK"
                        },
                        new
                        {
                            Id = new Guid("9898f3fa-8936-4585-8de0-f420b6e0bc03"),
                            IsActive = true,
                            Name = "Japan"
                        },
                        new
                        {
                            Id = new Guid("7904ca26-82ad-4b85-91eb-9b8c24da0991"),
                            IsActive = true,
                            Name = "China"
                        },
                        new
                        {
                            Id = new Guid("4d9bb00e-bb68-4b65-9975-f93f557307c1"),
                            IsActive = true,
                            Name = "USA"
                        },
                        new
                        {
                            Id = new Guid("abe4d049-487b-45f4-981f-15837e1f605a"),
                            IsActive = true,
                            Name = "Nigeria"
                        },
                        new
                        {
                            Id = new Guid("8566e1c7-4f2a-48d9-8ebe-82a77cef4ac4"),
                            IsActive = true,
                            Name = "India"
                        });
                });

            modelBuilder.Entity("MoviesGallery.Models.Director", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e43326bb-f2b3-45a0-8a32-5c5b70e0164c"),
                            IsActive = true,
                            Name = "Director 1"
                        },
                        new
                        {
                            Id = new Guid("cc556ea8-6a2e-4baf-b335-0ef6a76abcff"),
                            IsActive = true,
                            Name = "Director 2"
                        },
                        new
                        {
                            Id = new Guid("18da6f78-e697-4793-9715-bca3a91e403d"),
                            IsActive = true,
                            Name = "Director 3"
                        },
                        new
                        {
                            Id = new Guid("5f2c1e52-149a-49a4-9d5b-f236c792411c"),
                            IsActive = true,
                            Name = "Director 4"
                        },
                        new
                        {
                            Id = new Guid("3a9eb2a6-88da-4710-8fd5-73182c64f19d"),
                            IsActive = true,
                            Name = "Director 5"
                        },
                        new
                        {
                            Id = new Guid("21880c20-149c-4b74-91ca-8d7d04f114d2"),
                            IsActive = true,
                            Name = "Director 6"
                        },
                        new
                        {
                            Id = new Guid("7010fb31-094f-4363-90aa-c559e3aa76ce"),
                            IsActive = true,
                            Name = "Director 7"
                        },
                        new
                        {
                            Id = new Guid("4ec85ffa-963d-4f5d-9478-a88b4ced17ba"),
                            IsActive = true,
                            Name = "Director 8"
                        },
                        new
                        {
                            Id = new Guid("e8a81d0e-6a77-4175-a277-ef722b43bccb"),
                            IsActive = true,
                            Name = "Director 9"
                        },
                        new
                        {
                            Id = new Guid("a775e58d-6181-4ba4-95a2-9fdf120e3ee4"),
                            IsActive = true,
                            Name = "Director 10"
                        });
                });

            modelBuilder.Entity("MoviesGallery.Models.DownloadLink", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("DownloadLinks");
                });

            modelBuilder.Entity("MoviesGallery.Models.FilmStar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("FilmStars");

                    b.HasData(
                        new
                        {
                            Id = new Guid("abddab8c-4dfa-4531-aae9-7527e9677d25"),
                            IsActive = true,
                            Name = "FilmStar 1"
                        },
                        new
                        {
                            Id = new Guid("bd994c16-b011-4a1f-b940-80aa3a4501f0"),
                            IsActive = true,
                            Name = "FilmStar 2"
                        },
                        new
                        {
                            Id = new Guid("012694ad-2e99-4b1f-bd93-36300819d70b"),
                            IsActive = true,
                            Name = "FilmStar 3"
                        },
                        new
                        {
                            Id = new Guid("31352758-2bc4-424d-8a30-00fcf01c4cf8"),
                            IsActive = true,
                            Name = "FilmStar 4"
                        },
                        new
                        {
                            Id = new Guid("6ae21efc-68c2-4ffa-b6c3-8ce75b4ea282"),
                            IsActive = true,
                            Name = "FilmStar 5"
                        },
                        new
                        {
                            Id = new Guid("f4b03c83-e21b-42fe-bff9-f4ea2b5f6fdc"),
                            IsActive = true,
                            Name = "FilmStar 6"
                        },
                        new
                        {
                            Id = new Guid("b53b8f5a-ddf7-4866-bf83-3380f72a5bd3"),
                            IsActive = true,
                            Name = "FilmStar 7"
                        },
                        new
                        {
                            Id = new Guid("025cd4ad-479e-4ff0-b44a-c9f96e35f536"),
                            IsActive = true,
                            Name = "FilmStar 8"
                        },
                        new
                        {
                            Id = new Guid("1a84419c-0543-4fb8-98f8-41646447c1eb"),
                            IsActive = true,
                            Name = "FilmStar 9"
                        },
                        new
                        {
                            Id = new Guid("a244649e-08a3-4a4a-89aa-9b0f5a924a35"),
                            IsActive = true,
                            Name = "FilmStar 10"
                        });
                });

            modelBuilder.Entity("MoviesGallery.Models.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = new Guid("18fc1c60-ff29-4e80-9bb1-22851fbcad8b"),
                            IsActive = true,
                            Name = "French"
                        },
                        new
                        {
                            Id = new Guid("77793fdc-cc93-45e4-91ec-814023d28a08"),
                            IsActive = true,
                            Name = "Spanish"
                        },
                        new
                        {
                            Id = new Guid("58e554d0-b10b-4172-ae53-a09436fcc8e1"),
                            IsActive = true,
                            Name = "German"
                        },
                        new
                        {
                            Id = new Guid("c1a595be-344e-4bc0-a61d-34eea1c9b591"),
                            IsActive = true,
                            Name = "Hindi"
                        },
                        new
                        {
                            Id = new Guid("ff136ca3-bf19-455a-bdd3-68efe022f9c3"),
                            IsActive = true,
                            Name = "English"
                        },
                        new
                        {
                            Id = new Guid("9551851d-bfad-4a58-8403-d384959fff8d"),
                            IsActive = true,
                            Name = "Mandarin"
                        },
                        new
                        {
                            Id = new Guid("927e0e9d-1a84-45da-ad12-674ed25ab40a"),
                            IsActive = true,
                            Name = "Japanese"
                        },
                        new
                        {
                            Id = new Guid("574d6dd7-c405-4d25-be19-136aa0f9296a"),
                            IsActive = true,
                            Name = "Italian"
                        },
                        new
                        {
                            Id = new Guid("d91b6f84-9b3a-42f4-a9ab-742ad88130ba"),
                            IsActive = true,
                            Name = "Russian"
                        },
                        new
                        {
                            Id = new Guid("23297f52-8150-4e55-aa43-3e347a0485f3"),
                            IsActive = true,
                            Name = "Arabic"
                        },
                        new
                        {
                            Id = new Guid("23ef98d3-c998-4bc4-a8df-9d46f4b99440"),
                            IsActive = true,
                            Name = "Korean"
                        },
                        new
                        {
                            Id = new Guid("2acae217-4638-4b01-b129-b6492d0ccc1a"),
                            IsActive = true,
                            Name = "Hebrew"
                        },
                        new
                        {
                            Id = new Guid("34699ed5-ac62-47ff-bd7f-74ec8af00fc7"),
                            IsActive = true,
                            Name = "Cantonese"
                        },
                        new
                        {
                            Id = new Guid("477b6732-dade-4a2e-a2c2-b0759d172a88"),
                            IsActive = true,
                            Name = "Portuguese"
                        },
                        new
                        {
                            Id = new Guid("5e1b8e58-2d8a-4411-92f3-af7e90bd43ca"),
                            IsActive = true,
                            Name = "Swedish"
                        },
                        new
                        {
                            Id = new Guid("8332fc8f-e84c-43dd-b7a0-fb4ea3cd1372"),
                            IsActive = true,
                            Name = "Latin"
                        },
                        new
                        {
                            Id = new Guid("9c079324-4650-4b2b-a23d-f95d6c88a0e4"),
                            IsActive = true,
                            Name = "Ukrainian"
                        },
                        new
                        {
                            Id = new Guid("7fc551bd-0efa-4def-8c9d-b7ece78e1d27"),
                            IsActive = true,
                            Name = "Danish"
                        },
                        new
                        {
                            Id = new Guid("54f429e6-8864-447c-955d-6db44725acc0"),
                            IsActive = true,
                            Name = "Persian"
                        });
                });

            modelBuilder.Entity("MoviesGallery.Models.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CoverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfRelease")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfUpload")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DirectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("IMDB")
                        .HasColumnType("real");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("QualityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SampleDownloadLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Size")
                        .HasColumnType("real");

                    b.Property<string>("StoryLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("TotalDownloads")
                        .HasColumnType("bigint");

                    b.Property<string>("Trailer")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("DirectorId");

                    b.HasIndex("QualityId");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = new Guid("641a35ab-9ebb-4d10-b8ea-979f1be734b3"),
                            DateOfUpload = new DateTime(2021, 6, 15, 22, 58, 8, 752, DateTimeKind.Local).AddTicks(5239),
                            IMDB = 0f,
                            IsActive = true,
                            LastUpdatedOn = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3077),
                            Size = 0f,
                            Title = "Movie 1",
                            TotalDownloads = 0L
                        },
                        new
                        {
                            Id = new Guid("a74f1628-7153-4392-86f2-f6054515fccd"),
                            DateOfUpload = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3841),
                            IMDB = 0f,
                            IsActive = true,
                            LastUpdatedOn = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3845),
                            Size = 0f,
                            Title = "Movie 2",
                            TotalDownloads = 0L
                        },
                        new
                        {
                            Id = new Guid("0fa77b4d-f011-40f3-935e-5c2ce4735aca"),
                            DateOfUpload = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3857),
                            IMDB = 0f,
                            IsActive = true,
                            LastUpdatedOn = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3858),
                            Size = 0f,
                            Title = "Movie 3",
                            TotalDownloads = 0L
                        },
                        new
                        {
                            Id = new Guid("561abf17-b95c-4a68-83ac-9f52eb84224f"),
                            DateOfUpload = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3860),
                            IMDB = 0f,
                            IsActive = true,
                            LastUpdatedOn = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3861),
                            Size = 0f,
                            Title = "Movie 4",
                            TotalDownloads = 0L
                        },
                        new
                        {
                            Id = new Guid("819f2f78-7d8a-4453-8538-85c0958dbb20"),
                            DateOfUpload = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3863),
                            IMDB = 0f,
                            IsActive = true,
                            LastUpdatedOn = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3864),
                            Size = 0f,
                            Title = "Movie 5",
                            TotalDownloads = 0L
                        },
                        new
                        {
                            Id = new Guid("2299ec48-d4b3-4656-bec1-b8315e9d236f"),
                            DateOfUpload = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3869),
                            IMDB = 0f,
                            IsActive = true,
                            LastUpdatedOn = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3870),
                            Size = 0f,
                            Title = "Movie 6",
                            TotalDownloads = 0L
                        },
                        new
                        {
                            Id = new Guid("533e3b70-171c-48c3-83c4-2e8b4bce6578"),
                            DateOfUpload = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3873),
                            IMDB = 0f,
                            IsActive = true,
                            LastUpdatedOn = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3873),
                            Size = 0f,
                            Title = "Movie 7",
                            TotalDownloads = 0L
                        },
                        new
                        {
                            Id = new Guid("49e9eb61-f776-44e3-a36e-9404c5bb51a4"),
                            DateOfUpload = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3875),
                            IMDB = 0f,
                            IsActive = true,
                            LastUpdatedOn = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3876),
                            Size = 0f,
                            Title = "Movie 8",
                            TotalDownloads = 0L
                        },
                        new
                        {
                            Id = new Guid("71661d2d-1ba0-40af-878d-65a395da03b5"),
                            DateOfUpload = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3878),
                            IMDB = 0f,
                            IsActive = true,
                            LastUpdatedOn = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3879),
                            Size = 0f,
                            Title = "Movie 9",
                            TotalDownloads = 0L
                        },
                        new
                        {
                            Id = new Guid("21b37cbe-3bbe-412c-a8cd-f590de3a3bf6"),
                            DateOfUpload = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3885),
                            IMDB = 0f,
                            IsActive = true,
                            LastUpdatedOn = new DateTime(2021, 6, 15, 22, 58, 8, 753, DateTimeKind.Local).AddTicks(3886),
                            Size = 0f,
                            Title = "Movie 10",
                            TotalDownloads = 0L
                        });
                });

            modelBuilder.Entity("MoviesGallery.Models.Quality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Qualities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0085ff54-943b-4bd1-9b36-3b0208dacc67"),
                            IsActive = true,
                            Name = "Quality 1"
                        },
                        new
                        {
                            Id = new Guid("d67f32e8-24cd-459b-b3c4-9065755502c8"),
                            IsActive = true,
                            Name = "Quality 2"
                        },
                        new
                        {
                            Id = new Guid("a3485b87-b8e8-4388-95e8-c3e56c019c05"),
                            IsActive = true,
                            Name = "Quality 3"
                        },
                        new
                        {
                            Id = new Guid("4c4d68e1-47cd-4af2-96f4-cac0088a3f17"),
                            IsActive = true,
                            Name = "Quality 4"
                        },
                        new
                        {
                            Id = new Guid("43c43fec-332a-4212-8d91-321321d1d2ab"),
                            IsActive = true,
                            Name = "Quality 5"
                        },
                        new
                        {
                            Id = new Guid("9986dd8e-a99a-4e01-852f-e5b8f22bd74c"),
                            IsActive = true,
                            Name = "Quality 6"
                        },
                        new
                        {
                            Id = new Guid("a54b5620-9edd-40e0-9ee1-0305004db426"),
                            IsActive = true,
                            Name = "Quality 7"
                        },
                        new
                        {
                            Id = new Guid("aabbbc6c-c5f8-4b74-93a5-422db95d003e"),
                            IsActive = true,
                            Name = "Quality 8"
                        },
                        new
                        {
                            Id = new Guid("cd43b799-c026-4955-a00b-a770827f9319"),
                            IsActive = true,
                            Name = "Quality 9"
                        },
                        new
                        {
                            Id = new Guid("9ad582b5-532d-4ac9-b1c9-92c6966e1bcc"),
                            IsActive = true,
                            Name = "Quality 10"
                        });
                });

            modelBuilder.Entity("MoviesGallery.Models.Screenshot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("Screenshots");
                });

            modelBuilder.Entity("MoviesGallery.Models.SlideShow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateOfUpload")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.ToTable("SlideShows");
                });

            modelBuilder.Entity("CategoryMovie", b =>
                {
                    b.HasOne("MoviesGallery.Models.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesGallery.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FilmStarMovie", b =>
                {
                    b.HasOne("MoviesGallery.Models.FilmStar", null)
                        .WithMany()
                        .HasForeignKey("FilmStarsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesGallery.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LanguageMovie", b =>
                {
                    b.HasOne("MoviesGallery.Models.Language", null)
                        .WithMany()
                        .HasForeignKey("LanguagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoviesGallery.Models.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MoviesGallery.Models.DownloadLink", b =>
                {
                    b.HasOne("MoviesGallery.Models.Movie", "Movie")
                        .WithMany("DownloadLinks")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesGallery.Models.Movie", b =>
                {
                    b.HasOne("MoviesGallery.Models.Country", "Country")
                        .WithMany("Movies")
                        .HasForeignKey("CountryId");

                    b.HasOne("MoviesGallery.Models.Director", "Director")
                        .WithMany("Movies")
                        .HasForeignKey("DirectorId");

                    b.HasOne("MoviesGallery.Models.Quality", "Quality")
                        .WithMany("Movies")
                        .HasForeignKey("QualityId");

                    b.Navigation("Country");

                    b.Navigation("Director");

                    b.Navigation("Quality");
                });

            modelBuilder.Entity("MoviesGallery.Models.Screenshot", b =>
                {
                    b.HasOne("MoviesGallery.Models.Movie", "Movie")
                        .WithMany("Screenshots")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesGallery.Models.SlideShow", b =>
                {
                    b.HasOne("MoviesGallery.Models.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("MoviesGallery.Models.Country", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("MoviesGallery.Models.Director", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("MoviesGallery.Models.Movie", b =>
                {
                    b.Navigation("DownloadLinks");

                    b.Navigation("Screenshots");
                });

            modelBuilder.Entity("MoviesGallery.Models.Quality", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
